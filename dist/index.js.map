{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../src/index.ts"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\r\n", "declare const STRIPE_KEY: string;\r\n\r\nconst init = async () => {\r\n    let isIdealPayment = true;\r\n    let isCardPayment = false;\r\n\r\n    const translateStripeError = (error) => {\r\n        switch (error) {\r\n            case 'Your card has been declined.':\r\n                return 'Uw kaart is geweigerd.';\r\n            case 'Your card has insufficient funds.':\r\n                return 'Uw kaart heeft onvoldoende saldo.';\r\n            case 'Your card has expired.':\r\n                return 'Uw kaart is verlopen.';\r\n            case 'Your card\\'s security code is incorrect.':\r\n                return 'De beveiligingscode van uw kaart is onjuist.';\r\n            case 'An error occurred while processing your card. Try again in a little bit.':\r\n                return 'Er is een fout opgetreden bij het verwerken van uw kaart. Probeer het over een poosje opnieuw.';\r\n            case 'Your card number is invalid.':\r\n                return 'Uw kaartnummer is ongeldig.';\r\n            case 'Your card was declined for making repeated attempts too frequently.':\r\n                return 'Uw kaart is geweigerd vanwege het te vaak herhalen van pogingen.';\r\n            default:\r\n                return 'Er is een onbekende fout opgetreden.';\r\n        }\r\n    };\r\n    \r\n    const stripe = window.Stripe?.(STRIPE_KEY);\r\n    if (!stripe) return;\r\n\r\n    const form = document.querySelector<HTMLFormElement>('[data-element=\"payment_form\"]');\r\n    if (!form) return;\r\n\r\n    const ccStripeElement = document.querySelector<HTMLElement>('[data-element=\"cc_stripe\"]');\r\n    if (!ccStripeElement) return;\r\n\r\n    const idealStripeElement = document.querySelector<HTMLElement>('[data-element=\"ideal_stripe\"]');\r\n    if (!idealStripeElement) return;\r\n    \r\n\r\n    const elements = stripe.elements();\r\n\r\n    // styling of elements check here properties: https://stripe.com/docs/js/appendix/style\r\n    const idealBank = elements.create('idealBank', {\r\n    style: {\r\n        base: {\r\n        iconColor: '#000',\r\n        backgroundColor: '#17535B',\r\n        border: '1px',\r\n        borderColor: '#fff',\r\n        padding: '20px',\r\n        color: '#fff',\r\n        borderRadius: '4px',\r\n        fontWeight: '500',\r\n        fontFamily: \"Ekster, sans-serif, Inter, Open Sans, Segoe UI, sans-serif\",\r\n        fontSize: '16px',\r\n        fontSmoothing: 'antialiased',\r\n        ':-webkit-autofill': {\r\n            color: '#fff',\r\n        },\r\n        '::placeholder': {\r\n            color: '#fff',\r\n        },\r\n        },\r\n        invalid: {\r\n        iconColor: '#fff',\r\n        color: '#fff',\r\n        },\r\n    },\r\n    });\r\n    idealBank.mount(idealStripeElement);\r\n\r\n    const card = elements.create('card', {\r\n     style: {\r\n      base: {\r\n        backgroundColor: '#17535B',\r\n        border: '1px',\r\n        padding: '20px',\r\n        borderColor: '#fff',\r\n        color: \"#fff\",\r\n        iconColor: \"#fff\",\r\n        fontWeight: 500,\r\n        fontFamily: \"Ekster, sans-serif, Inter, Open Sans, Segoe UI, sans-serif\",\r\n        fontSize: \"16px\",\r\n        fontSmoothing: \"antialiased\",\r\n        \"::placeholder\": {\r\n          color: \"#fff\"\r\n        }\r\n      },\r\n      invalid: {\r\n        iconColor: '#fff',\r\n        color: \"#E25950\"\r\n      }\r\n    }\r\n  });\r\n    card.mount(ccStripeElement);\r\n\r\n    // Get all tab elements\r\n    var tabs = document.querySelectorAll('.w-tab-link');\r\n\r\n    // Add click event listeners to each tab\r\n    tabs.forEach(function(tab) {\r\n    tab.addEventListener('click', function(event) {\r\n        // Prevent the default link behavior\r\n        event.preventDefault();\r\n\r\n        // Get the data-element attribute value\r\n        var dataElement = tab.getAttribute('data-element');\r\n\r\n        // Check if the clicked tab has a specific data-element value\r\n        if (dataElement === 'ideal_button') {\r\n            isIdealPayment = true;\r\n            isCardPayment = false;\r\n        } else if (dataElement === 'card_button') {\r\n            isCardPayment = true;\r\n            isIdealPayment = false;\r\n        }\r\n      });\r\n    });\r\n\r\n     idealBank.on(\"change\", (event: any) => {\r\n        const button = document.querySelector('.button-slider-next') as HTMLAnchorElement;\r\n        button.classList.remove('is-disabled');\r\n    });\r\n   \r\n\r\n    form.addEventListener('submit', async (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        \r\n        const amountStripeElement = document.querySelector<HTMLInputElement>('[data-element=\"price_amount\"]');\r\n        let amountNumber = parseFloat(String(amountStripeElement?.value)) ?? 0;\r\n        \r\n        if (!amountStripeElement || isNaN(amountNumber)) {\r\n            return;\r\n        }\r\n\r\n        // amountNumber * 100 because stripe does the input price / 100\r\n        let correctStripeAmount = amountNumber * 100;\r\n        const payment_intent = await createPaymentIntent(correctStripeAmount);\r\n        if (!payment_intent) return;\r\n\r\n        await elements.submit()\r\n\r\n        const isSadakaPayment = payment_intent.isSadakaPayment ? payment_intent.isSadakaPayment : false;\r\n        console.log(payment_intent)\r\n        let paymentType;\r\n\r\n        if(payment_intent.isZakaatPayment && payment_intent.isRibaPayment){\r\n            paymentType = 'zakaat'\r\n        } else if(payment_intent.isRibaPayment && !payment_intent.isZakaatPayment) {\r\n            paymentType = 'riba'\r\n        } else if(payment_intent.isSadakaPayment){\r\n            paymentType = 'sadaka'\r\n        }else{\r\n            paymentType = 'zakaat'\r\n        }\r\n        \r\n        if(payment_intent.isMonthly){\r\n           window.location.replace(payment_intent.paymentUrl)\r\n        } else if(isIdealPayment){\r\n            const resultIdealPayment = await stripe.confirmIdealPayment(payment_intent.clientSecret ,{\r\n                payment_method: {\r\n                    ideal: idealBank\r\n                },\r\n                return_url: `https://nationaal-zakat-fonds-rekenmachine.webflow.io/gegevens?paymentType=${paymentType}&paymentSort=ideal`,\r\n            })\r\n        } else if(isCardPayment){\r\n            const resultCardPayment = await stripe.confirmCardPayment(payment_intent.clientSecret, {\r\n            payment_method: {\r\n                    card: card\r\n                },\r\n                return_url: `https://nationaal-zakat-fonds-rekenmachine.webflow.io/gegevens?paymentType=${paymentType}&paymentSort=card`,\r\n            })\r\n            if (resultCardPayment.error) {\r\n                    // Vertaal de foutmelding\r\n                    const translatedErrorMessage = translateStripeError(resultCardPayment.error.message) || 'De betaling met uw Creditcard is niet gelukt, probeer het opnieuw.';\r\n                \r\n                    // Check and remove any existing failed message\r\n                    var existingFailedMessage = document.querySelector('.failed-message');\r\n                    if (existingFailedMessage && existingFailedMessage.parentNode) {\r\n                        existingFailedMessage.parentNode.removeChild(existingFailedMessage);\r\n                    }\r\n                \r\n                    // Create a new failed message div\r\n                    var failedMessage = document.createElement('div');\r\n                    failedMessage.classList.add('failed-message');\r\n                    failedMessage.textContent = translatedErrorMessage;\r\n                    failedMessage.style.color = 'red';\r\n                \r\n                    // Get the reference to the existing div where the new text should be inserted above\r\n                    var referenceDiv = document.querySelector('.impact-tabs-menu.w-tab-menu');\r\n                \r\n                    // Insert the new message\r\n                    if (referenceDiv && referenceDiv.parentNode) {\r\n                        referenceDiv.parentNode.insertBefore(failedMessage, referenceDiv);\r\n                    } else {\r\n                        console.error('Element or parent of .impact-tabs-menu.w-tab-menu not found');\r\n                    }\r\n                }\r\n            else {\r\n                if(paymentType === 'riba') window.location.replace(`https://nationaal-zakat-fonds-rekenmachine.webflow.io/bedankt-riba`);\r\n                else if(paymentType === 'zakaat') window.location.replace(`https://nationaal-zakat-fonds-rekenmachine.webflow.io/bedankt-zakaat`);\r\n                else if(paymentType === 'sadaka') window.location.replace(`https://nationaal-zakat-fonds-rekenmachine.webflow.io/bedankt-sadaqa`);\r\n                else window.location.replace(`https://nationaal-zakat-fonds-rekenmachine.webflow.io/bedankt-sadaqa`);\r\n            }\r\n        }\r\n    })\r\n};\r\n\r\nconst createPaymentIntent = async (amount: number) => {\r\n    try {\r\n        let userslowlaneData = sessionStorage.getItem(\"userslowlane\");\r\n        const response = await fetch('https://cloudflare-work.jabirtisou8072.workers.dev/create-payment', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                amount: amount,\r\n                currency: 'eur',\r\n                userslowlaneData\r\n            })\r\n        });\r\n        const data: { paymentIntent_id:string; clientSecret: string, isSadakaPayment: boolean, isRibaPayment: boolean, isZakaatPayment: boolean, paymentUrl: string, isMonthly: boolean } \r\n            = await response.json();\r\n\r\n        return data;\r\n    }catch(err) {\r\n        return null;\r\n    }\r\n}\r\n\r\ninit();\r\n"],
  "mappings": "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",
  "names": []
}
