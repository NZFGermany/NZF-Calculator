{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../src/index.ts"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "declare const STRIPE_KEY: string;\n\nconst init = async () => {\n    let isIdealPayment = true;\n    let isCardPayment = false;\n\n    const stripe = window.Stripe?.(STRIPE_KEY);\n    if (!stripe) return;\n\n    const form = document.querySelector<HTMLFormElement>('[data-element=\"payment_form\"]');\n    if (!form) return;\n\n    const ccStripeElement = document.querySelector<HTMLElement>('[data-element=\"cc_stripe\"]');\n    if (!ccStripeElement) return;\n\n    const idealStripeElement = document.querySelector<HTMLElement>('[data-element=\"ideal_stripe\"]');\n    if (!idealStripeElement) return;\n\n    const elements = stripe.elements();\n\n    // styling of elements check here properties: https://stripe.com/docs/js/appendix/style\n    const idealBank = elements.create('idealBank', {\n    style: {\n        base: {\n        iconColor: '#000',\n        backgroundColor: '#17535B',\n        border: '1px',\n        borderColor: '#fff',\n        padding: '20px',\n        color: '#fff',\n        borderRadius: '4px',\n        fontWeight: '500',\n        fontFamily: \"Ekster, sans-serif, Inter, Open Sans, Segoe UI, sans-serif\",\n        fontSize: '16px',\n        fontSmoothing: 'antialiased',\n        ':-webkit-autofill': {\n            color: '#fff',\n        },\n        '::placeholder': {\n            color: '#fff',\n        },\n        },\n        invalid: {\n        iconColor: '#fff',\n        color: '#fff',\n        },\n    },\n    });\n    idealBank.mount(idealStripeElement);\n\n    const card = elements.create('card', {\n     style: {\n      base: {\n        backgroundColor: '#17535B',\n        border: '1px',\n        padding: '20px',\n        borderColor: '#fff',\n        color: \"#fff\",\n        iconColor: \"#fff\",\n        fontWeight: 500,\n        fontFamily: \"Ekster, sans-serif, Inter, Open Sans, Segoe UI, sans-serif\",\n        fontSize: \"16px\",\n        fontSmoothing: \"antialiased\",\n        \"::placeholder\": {\n          color: \"#fff\"\n        }\n      },\n      invalid: {\n        iconColor: '#fff',\n        color: \"#E25950\"\n      }\n    }\n  });\n    card.mount(ccStripeElement);\n\n    // Get all tab elements\n    var tabs = document.querySelectorAll('.w-tab-link');\n\n    // Add click event listeners to each tab\n    tabs.forEach(function(tab) {\n    tab.addEventListener('click', function(event) {\n        // Prevent the default link behavior\n        event.preventDefault();\n\n        // Get the data-element attribute value\n        var dataElement = tab.getAttribute('data-element');\n\n        // Check if the clicked tab has a specific data-element value\n        if (dataElement === 'ideal_button') {\n            isIdealPayment = true;\n            isCardPayment = false;\n        } else if (dataElement === 'card_button') {\n            isCardPayment = true;\n            isIdealPayment = false;\n        }\n      });\n    });\n\n\n    form.addEventListener('submit', async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        \n        const amountStripeElement = document.querySelector<HTMLInputElement>('[data-element=\"price_amount\"]');\n        let amountNumber = parseFloat(String(amountStripeElement?.value)) ?? 0;\n        \n        if (!amountStripeElement || isNaN(amountNumber)) {\n            return;\n        }\n\n        // amountNumber * 100 because stripe does the input price / 100\n        let correctStripeAmount = amountNumber * 100;\n        const payment_intent = await createPaymentIntent(correctStripeAmount);\n        if (!payment_intent) return;\n\n        await elements.submit()\n\n        const isSadakaPayment = payment_intent.isSadakaPayment ? payment_intent.isSadakaPayment : false;\n        console.log(payment_intent)\n        let paymentType;\n\n        if(payment_intent.isZakaatPayment && payment_intent.isRibaPayment){\n            paymentType = 'zakaat'\n        } else if(payment_intent.isRibaPayment && !payment_intent.isZakaatPayment) {\n            paymentType = 'riba'\n        } else if(payment_intent.isSadakaPayment){\n            paymentType = 'sadaka'\n        }else{\n            paymentType = 'zakaat'\n        }\n        \n        if(payment_intent.isMonthly){\n           window.location.replace(payment_intent.paymentUrl)\n        } else if(isIdealPayment){\n            const resultIdealPayment = await stripe.confirmIdealPayment(payment_intent.clientSecret ,{\n                payment_method: {\n                    ideal: idealBank\n                },\n                return_url: `https://nationaal-zakat-fonds-rekenmachine.webflow.io/gegevens?paymentType=${paymentType}&paymentSort=ideal`,\n            })\n        } else if(isCardPayment){\n            const resultCardPayment = await stripe.confirmCardPayment(payment_intent.clientSecret, {\n            payment_method: {\n                    card: card\n                },\n                return_url: `https://nationaal-zakat-fonds-rekenmachine.webflow.io/gegevens?paymentType=${paymentType}&paymentSort=card`,\n            })\n            if(resultCardPayment.error) {\n                // Check and remove any existing failed message\n                var existingFailedMessage = document.querySelector('.failed-message');\n                if (existingFailedMessage && existingFailedMessage.parentNode) {\n                    existingFailedMessage.parentNode.removeChild(existingFailedMessage);\n                }\n\n                // Create a new failed message div\n                var failedMessage = document.createElement('div');\n                failedMessage.classList.add('failed-message'); // Assign a unique class for identification\n                failedMessage.textContent = resultCardPayment.error?.message || 'De betaling met uw Creditcard is niet gelukt, probeer het opnieuw.';\n                failedMessage.style.color = 'red';\n\n                // Get the reference to the existing div where the new text should be inserted above\n                var referenceDiv = document.querySelector('.impact-tabs-menu.w-tab-menu');\n\n                // Check if referenceDiv and its parentNode exist\n                if (referenceDiv && referenceDiv.parentNode) {\n                    referenceDiv.parentNode.insertBefore(failedMessage, referenceDiv);\n                } else {\n                    // Handle the case when the element or its parent is not found\n                    console.error('Element or parent of .impact-tabs-menu.w-tab-menu not found');\n                }\n            }\n            else {\n                if(paymentType === 'riba') window.location.replace(`https://nationaal-zakat-fonds-rekenmachine.webflow.io/bedankt-riba`);\n                else if(paymentType === 'zakaat') window.location.replace(`https://nationaal-zakat-fonds-rekenmachine.webflow.io/bedankt-zakaat`);\n                else if(paymentType === 'sadaka') window.location.replace(`https://nationaal-zakat-fonds-rekenmachine.webflow.io/bedankt-sadaqa`);\n                else window.location.replace(`https://nationaal-zakat-fonds-rekenmachine.webflow.io/bedankt-sadaqa`);\n            }\n        }\n    })\n};\n\nconst createPaymentIntent = async (amount: number) => {\n    try {\n        let userslowlaneData = sessionStorage.getItem(\"userslowlane\");\n        const response = await fetch('http://localhost:8787/create-payment', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                amount: amount,\n                currency: 'eur',\n                userslowlaneData\n            })\n        });\n        const data: { paymentIntent_id:string; clientSecret: string, isSadakaPayment: boolean, isRibaPayment: boolean, isZakaatPayment: boolean, paymentUrl: string, isMonthly: boolean } \n            = await response.json();\n\n        return data;\n    }catch(err) {\n        return null;\n    }\n}\n\ninit();"],
  "mappings": "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",
  "names": []
}
