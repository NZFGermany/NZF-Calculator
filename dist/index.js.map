{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../src/index.ts"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "declare const STRIPE_KEY: string;\n\nconst init = async () => {\n    let isSepaPayment = true;\n    let isCardPayment = false;\n    let isPaypalPayment = false;\n\n    const stripe = window.Stripe?.(STRIPE_KEY);\n    if (!stripe) return;\n\n    const form = document.querySelector<HTMLFormElement>('[data-element=\"payment_form\"]');\n    if (!form) return;\n\n    const ccStripeElement = document.querySelector<HTMLElement>('[data-element=\"cc_stripe\"]');\n    if (!ccStripeElement) return;\n\n    const sepaStripeElement = document.querySelector<HTMLElement>('[data-element=\"sepa_stripe\"]');\n    if (!sepaStripeElement) return;\n\n    const paypalStripeElement = document.querySelector<HTMLElement>('[data-element=\"paypal_stripe\"]');\n    if (!paypalStripeElement) return;\n\n    const elements = stripe.elements();\n\n    // styling of elements check here properties: https://stripe.com/docs/js/appendix/style\n    const sepaDebit = elements.create('iban', {\n        supportedCountries: ['SEPA'],\n        placeholderCountry: 'DE',\n        style: {\n            base: {\n                iconColor: '#000',\n                backgroundColor: '#17535B',\n                border: '1px solid #fff',\n                padding: '20px',\n                color: '#fff',\n                borderRadius: '4px',\n                fontWeight: '500',\n                fontFamily: \"Ekster, sans-serif, Inter, Open Sans, Segoe UI, sans-serif\",\n                fontSize: '16px',\n                fontSmoothing: 'antialiased',\n                ':-webkit-autofill': {\n                    color: '#fff',\n                },\n                '::placeholder': {\n                    color: '#fff',\n                },\n            },\n            invalid: {\n                iconColor: '#fff',\n                color: '#fff',\n            },\n        },\n    });\n    \n    // Mount the SEPA element to the page\n    sepaDebit.mount(sepaStripeElement);\n\n    const card = elements.create('card', {\n        style: {\n            base: {\n                backgroundColor: '#17535B',\n                border: '1px',\n                padding: '20px',\n                borderColor: '#fff',\n                color: \"#fff\",\n                iconColor: \"#fff\",\n                fontWeight: 500,\n                fontFamily: \"Ekster, sans-serif, Inter, Open Sans, Segoe UI, sans-serif\",\n                fontSize: \"16px\",\n                fontSmoothing: \"antialiased\",\n                \"::placeholder\": {\n                    color: \"#fff\"\n                }\n            },\n            invalid: {\n                iconColor: '#fff',\n                color: \"#E25950\"\n            }\n        }\n    });\n    card.mount(ccStripeElement);\n\n    // Get all tab elements\n    var tabs = document.querySelectorAll('.w-tab-link');\n\n    // Add click event listeners to each tab\n    tabs.forEach(function (tab) {\n        tab.addEventListener('click', function (event) {\n            // Prevent the default link behavior\n            event.preventDefault();\n\n            // Get the data-element attribute value\n            var dataElement = tab.getAttribute('data-element');\n\n            // Check if the clicked tab has a specific data-element value\n            if (dataElement === 'sepa_button') {\n                isSepaPayment = true;\n                isCardPayment = false;\n                isPaypalPayment = false;\n            } else if (dataElement === 'card_button') {\n                isCardPayment = true;\n                isSepaPayment = false;\n                isPaypalPayment = false;\n            } else if (dataElement === 'paypal_button') {\n                isCardPayment = false;\n                isSepaPayment = false;\n                isPaypalPayment = true;\n            }\n        });\n    });\n\n    form.addEventListener('submit', async (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const amountStripeElement = document.querySelector<HTMLInputElement>('[data-element=\"price_amount\"]');\n        let amountNumber = parseFloat(String(amountStripeElement?.value)) ?? 0;\n\n        if (!amountStripeElement || isNaN(amountNumber)) {\n            return;\n        }\n\n        // Set button text to loading state\n        var buttonText = document.querySelector(\".button-text\");\n        if (buttonText instanceof HTMLElement) {\n            buttonText.innerText = \"Verarbeitung...\";\n        }\n\n        // amountNumber * 100 because stripe does the input price / 100\n        let correctStripeAmount = amountNumber * 100;\n        \n        // Different flow for PayPal vs other payment methods\n        if (isPaypalPayment) {\n            await handlePayPalPayment(correctStripeAmount);\n        } else {\n            const payment_intent = await createPaymentIntent(correctStripeAmount);\n            if (!payment_intent) return;\n\n            await elements.submit();\n\n            const isSadakaPayment = payment_intent.isSadakaPayment ? payment_intent.isSadakaPayment : false;\n            console.log(payment_intent);\n\n            let userData = sessionStorage.getItem(\"userslowlane\");\n            let userdataclean = userData ? JSON.parse(userData) : {};\n            \n            userdataclean.paymentIntent_id = payment_intent.paymentIntent_id;\n            sessionStorage.setItem(\"userslowlane\", JSON.stringify(userdataclean));\n            localStorage.removeItem(\"user\");\n            const currentTime = new Date();\n            const userObject = {\n                ...userdataclean,\n                timestamp: currentTime.getTime(), \n                readableTime: currentTime.toString() \n            };\n            localStorage.setItem(\"user\", JSON.stringify(userObject));\n\n            let zakatBedrag = parseFloat(userdataclean.zakatPay) || 0;\n            let ribaBedrag = parseFloat(userdataclean.ribaValue) || 0;\n            let sadaqahBedrag = parseFloat(userdataclean.sadakaValue) || 0;\n            let hoogsteBedrag = Math.max(zakatBedrag, ribaBedrag, sadaqahBedrag);\n            let paymentType;\n\n            if (hoogsteBedrag === zakatBedrag) {\n                paymentType = 'zakat';\n            } else if (hoogsteBedrag === ribaBedrag) {\n                paymentType = 'riba';\n            } else {\n                paymentType = 'sadaka';\n            }\n\n            if (payment_intent.isMonthly) {\n                window.location.replace(payment_intent.paymentUrl);\n                return;\n            } else if (isSepaPayment) {\n                processSepaPayment(stripe, sepaDebit, payment_intent, userdataclean, paymentType);\n            } else if (isCardPayment) {\n                processCardPayment(stripe, card, payment_intent, userdataclean, paymentType);\n            }\n        }\n    });\n};\n\n\n\n// Function to handle PayPal payment\nconst handlePayPalPayment = async (amount) => {\n    try {\n        let userslowlaneRawData = sessionStorage.getItem(\"userslowlane\");\n        let userslowlaneData = userslowlaneRawData ? JSON.parse(userslowlaneRawData) : {};\n        \n        const userTypeTranslations = {\n            \"ondernemer\": \"Unternehmer\",\n            \"particulier\": \"Privatperson\"\n        };\n\n        const keyMappings = {\n            zakatPay: \"ZakatBetrag\",\n            sadakaValue: \"SadaqahBetrag\",\n            ribaValue: \"ZinsBetrag\",\n            total: \"Gesamtbetrag\",\n            anoniem: \"Anonym\",\n            transactiekosten: \"Transaktionkosten\",\n            datum: \"Zahlungsdatum\",\n            fastlane: \"Fastlane Benutzer\",\n            userType: \"Type Zakat Zahler\",\n            userslowlane: \"Slowlane Benutzer\",\n            educatiefonds: \"Bildungsfonds\",\n            noodfonds: \"Notfallfonds\",\n            woonfonds: \"Wohnfonds\",\n            maandelijks: \"Monatlich\",\n            voornaam: \"Vorname\",\n            achternaam: \"Nachname\",\n            email: \"Email\",\n            stad: \"Stadt\",\n            straat: \"Stra\u00DFe + Hausnummer\",\n            postcode: \"Postleizahl\",\n        };\n\n        if (userslowlaneData.anoniem) {\n            delete keyMappings.voornaam;\n            delete keyMappings.achternaam;\n            delete keyMappings.email;\n        }\n\n        const filteredAndRenamedData = Object.keys(userslowlaneData)\n            .filter(key => Object.keys(keyMappings).includes(key))\n            .reduce((obj, key) => {\n                const newKey = keyMappings[key] || key; \n\n                if (key === \"userType\" && userTypeTranslations[userslowlaneData[key]]) {\n                    obj[newKey] = userTypeTranslations[userslowlaneData[key]];\n                } else {\n                    obj[newKey] = userslowlaneData[key];\n                }\n\n                return obj;\n            }, {});\n\n        // Determine payment type\n        let zakatBedrag = parseFloat(userslowlaneData.zakatPay) || 0;\n        let ribaBedrag = parseFloat(userslowlaneData.ribaValue) || 0;\n        let sadaqahBedrag = parseFloat(userslowlaneData.sadakaValue) || 0;\n        let hoogsteBedrag = Math.max(zakatBedrag, ribaBedrag, sadaqahBedrag);\n        let paymentType;\n\n        if (hoogsteBedrag === zakatBedrag) {\n            paymentType = 'zakat';\n        } else if (hoogsteBedrag === ribaBedrag) {\n            paymentType = 'riba';\n        } else {\n            paymentType = 'sadaka';\n        }\n\n        // Create PayPal payment\n        const response = await fetch('https://nzf-stripe.toufik.workers.dev/create-paypal-checkout', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                amount: amount,\n                currency: 'eur',\n                paymentType: paymentType,\n                userslowlaneData: JSON.stringify(filteredAndRenamedData)\n            })\n        });\n\n        if (!response.ok) {\n            throw new Error(`Server responded with status ${response.status}`);\n        }\n\n        const data = await response.json();\n        console.log(\"PayPal payment data:\", data);\n\n        // Store user data in localStorage\n        const currentTime = new Date();\n        const userObject = {\n            ...userslowlaneData,\n            paymentIntentId: data.paymentIntentId,\n            timestamp: currentTime.getTime(), \n            readableTime: currentTime.toString(),\n            paymentMethod: 'paypal'\n        };\n        localStorage.setItem(\"user\", JSON.stringify(userObject));\n\n        // Redirect to Stripe PayPal checkout\n        if (data.clientSecret) {\n            const stripe = window.Stripe?.(STRIPE_KEY);\n            if (!stripe) throw new Error('Stripe not initialized');\n\n            const result = await stripe.confirmPayPalPayment(\n                data.clientSecret,\n                {\n                    payment_method: {\n                        paypal: {},\n                        billing_details: {\n                            name: userslowlaneData.voornaam + \" \" + userslowlaneData.achternaam || 'Unknown Name',\n                            email: userslowlaneData.email || 'unknown@example.com',\n                            address: {\n                                line1: userslowlaneData.straat || 'Unknown Street',\n                                postal_code: userslowlaneData.postcode || '00000',\n                                city: userslowlaneData.stad || 'Unknown City',\n                                \n                            },\n                            \n                        }\n                    },\n                    return_url: `https://nationaal-zakat-fonds-de.webflow.io/zahlung?paymentType=${paymentType}&paymentSort=paypal`\n                }\n            );\n\n            if (result.error) {\n                throw new Error(result.error.message || 'PayPal payment failed');\n            }\n        } else {\n            throw new Error('No client secret returned from server');\n        }\n    } catch (err) {\n        console.error('PayPal payment error:', err);\n        \n        // Reset button text\n        var buttonText = document.querySelector('.button-text');\n        if (buttonText instanceof HTMLElement) {\n            buttonText.innerText = \"Zur Zahlung\";\n        }\n\n        // Show error message\n        var existingFailedMessage = document.querySelector(\".failed-message\");\n        if (existingFailedMessage && existingFailedMessage.parentNode) {\n            existingFailedMessage.parentNode.removeChild(existingFailedMessage);\n        }\n        \n        var failedMessage = document.createElement(\"div\");\n        failedMessage.classList.add(\"failed-message\");\n        failedMessage.textContent = \"Bei der PayPal-Zahlung ist ein Fehler aufgetreten. Bitte versuchen Sie es erneut oder w\u00E4hlen Sie eine andere Zahlungsmethode.\";\n        failedMessage.style.color = \"red\";\n        \n        var referenceDiv = document.querySelector(\".impact-tabs-menu.w-tab-menu\");\n        if (referenceDiv && referenceDiv.parentNode) {\n            referenceDiv.parentNode.insertBefore(failedMessage, referenceDiv);\n        } else {\n            console.error(\"Element or parent of .impact-tabs-menu.w-tab-menu not found\");\n        }\n    }\n};\n\n// Process SEPA payment\nconst processSepaPayment = async (stripe, sepaDebit, payment_intent, userdataclean, paymentType) => {\n    // Define the error translation function within the scope\n    const translateStripeError = (error) => {\n        switch (error) {\n            case 'Your card has been declined.':\n                return 'Ihre Karte wurde abgelehnt.';\n            case 'Your card has insufficient funds.':\n                return 'Ihre Karte hat unzureichende Mittel.';\n            case 'Your card has expired.':\n                return 'Ihre Karte ist abgelaufen.';\n            case 'Your card\\'s security code is incorrect.':\n                return 'Der Sicherheitscode Ihrer Karte ist falsch.';\n            case 'An error occurred while processing your card. Try again in a little bit.':\n                return 'Beim Verarbeiten Ihrer Karte ist ein Fehler aufgetreten. Versuchen Sie es in K\u00FCrze erneut.';\n            case 'Your card number is invalid.':\n                return 'Ihre Kartennummer ist ung\u00FCltig.';\n            case 'Your card was declined for making repeated attempts too frequently.':\n                return 'Ihre Karte wurde abgelehnt, weil zu oft wiederholte Versuche gemacht wurden.';\n            default:\n                return 'Ein unbekannter Fehler ist aufgetreten.';\n        }\n    };\n    \n    const resultSepaPayment = await stripe.confirmSepaDebitPayment(payment_intent.clientSecret, {\n        payment_method: {\n            sepa_debit: sepaDebit, \n            billing_details: {\n                name: userdataclean.voornaam + \" \" + userdataclean.achternaam || 'Unknown Name', \n                email: userdataclean.email || 'unknown@example.com',\n                address: {\n                    line1: userdataclean.straat || 'Unknown Street',\n                    postal_code: userdataclean.postcode || '00000',\n                    city: userdataclean.stad || 'Unknown City',\n                },\n            },\n        },\n        return_url: `https://secure.zakat-deutschland.de/zahlung?paymentType=${paymentType}&paymentSort=sepa`\n    });\n\n    if (resultSepaPayment.error) {\n        // Show translated error message\n        showPaymentError(translateStripeError(resultSepaPayment.error.message) || 'Die Zahlung mit Ihrer SEPA-Bank ist fehlgeschlagen, bitte versuchen Sie es erneut.');\n    } else {\n        redirectToThankYouPage(paymentType);\n    }\n};\n\n// Process card payment\nconst processCardPayment = async (stripe, card, payment_intent, userdataclean, paymentType) => {\n    // Define the error translation function within the scope\n    const translateStripeError = (error) => {\n        switch (error) {\n            case 'Your card has been declined.':\n                return 'Ihre Karte wurde abgelehnt.';\n            case 'Your card has insufficient funds.':\n                return 'Ihre Karte hat unzureichende Mittel.';\n            case 'Your card has expired.':\n                return 'Ihre Karte ist abgelaufen.';\n            case 'Your card\\'s security code is incorrect.':\n                return 'Der Sicherheitscode Ihrer Karte ist falsch.';\n            case 'An error occurred while processing your card. Try again in a little bit.':\n                return 'Beim Verarbeiten Ihrer Karte ist ein Fehler aufgetreten. Versuchen Sie es in K\u00FCrze erneut.';\n            case 'Your card number is invalid.':\n                return 'Ihre Kartennummer ist ung\u00FCltig.';\n            case 'Your card was declined for making repeated attempts too frequently.':\n                return 'Ihre Karte wurde abgelehnt, weil zu oft wiederholte Versuche gemacht wurden.';\n            default:\n                return 'Ein unbekannter Fehler ist aufgetreten.';\n        }\n    };\n    \n    const resultCardPayment = await stripe.confirmCardPayment(payment_intent.clientSecret, {\n        payment_method: {\n            card: card,\n            billing_details: {\n                name: userdataclean.voornaam + \" \" + userdataclean.achternaam || 'Unknown Name',\n                email: userdataclean.email || 'unknown@example.com',\n                address: {\n                    line1: userdataclean.straat || 'Unknown Street',\n                    postal_code: userdataclean.postcode || '00000',\n                    city: userdataclean.stad || 'Unknown City',\n                },\n            },\n        },\n        return_url: `https://secure.zakat-deutschland.de/zahlung?paymentType=${paymentType}&paymentSort=card`\n    });\n\n    if (resultCardPayment.error) {\n        // Show translated error message\n        showPaymentError(translateStripeError(resultCardPayment.error.message) || 'Die Zahlung mit Ihrer Kreditkarte ist fehlgeschlagen, bitte versuchen Sie es erneut.');\n    } else {\n        redirectToThankYouPage(paymentType);\n    }\n};\n\n// Helper function to show payment errors\nconst showPaymentError = (errorMessage) => {\n    // Reset button text\n    var buttonText = document.querySelector(\".button-text\");\n    if (buttonText instanceof HTMLElement) {\n        buttonText.innerText = \"Zur Zahlung\";\n    }\n\n    // Check and remove any existing failed message\n    var existingFailedMessage = document.querySelector('.failed-message');\n    if (existingFailedMessage && existingFailedMessage.parentNode) {\n        existingFailedMessage.parentNode.removeChild(existingFailedMessage);\n    }\n\n    // Create a new failed message div\n    var failedMessage = document.createElement('div');\n    failedMessage.classList.add('failed-message');\n    failedMessage.textContent = errorMessage;\n    failedMessage.style.color = 'red';\n\n    // Get the reference to the existing div\n    var referenceDiv = document.querySelector('.impact-tabs-menu.w-tab-menu');\n\n    // Insert the new message\n    if (referenceDiv && referenceDiv.parentNode) {\n        referenceDiv.parentNode.insertBefore(failedMessage, referenceDiv);\n    } else {\n        console.error('Element or parent of .impact-tabs-menu.w-tab-menu not found');\n    }\n};\n\n// Helper function to redirect to thank you page\nconst redirectToThankYouPage = (paymentType) => {\n    if (paymentType === \"riba\")\n        window.location.replace(`https://secure.zakat-deutschland.de/danke-fuer-deine-riba`);\n    else if (paymentType === \"zakat\")\n        window.location.replace(`https://secure.zakat-deutschland.de/danke-fuer-deine-zakat`);\n    else if (paymentType === \"sadaka\")\n        window.location.replace(`https://secure.zakat-deutschland.de/danke-fuer-deine-sadaqah`);\n    else\n        window.location.replace(`https://secure.zakat-deutschland.de/danke-fuer-deine-sadaqah`);\n};\n\nconst createPaymentIntent = async (amount) => {\n    try {\n        let userslowlaneRawData = sessionStorage.getItem(\"userslowlane\");\n        let userslowlaneData = userslowlaneRawData ? JSON.parse(userslowlaneRawData) : {};\n        console.log(userslowlaneData);\n        \n        const userTypeTranslations = {\n            \"ondernemer\": \"Unternehmer\",\n            \"particulier\": \"Privatperson\"\n        };\n\n        const keyMappings = {\n            zakatPay: \"ZakatBetrag\",\n            sadakaValue: \"SadaqahBetrag\",\n            ribaValue: \"ZinsBetrag\",\n            total: \"Gesamtbetrag\",\n            anoniem: \"Anonym\",\n            transactiekosten: \"Transaktionkosten\",\n            datum: \"Zahlungsdatum\",\n            fastlane: \"Fastlane Benutzer\",\n            userType: \"Type Zakat Zahler\", // Hernoemen naar Duits\n            userslowlane: \"Slowlane Benutzer\",\n            educatiefonds: \"Bildungsfonds\",\n            noodfonds: \"Notfallfonds\",\n            woonfonds: \"Wohnfonds\",\n            maandelijks: \"Monatlich\",\n            voornaam: \"Vorname\",\n            achternaam: \"Nachname\",\n            email: \"Email\",\n            stad: \"Stadt\",\n            straat: \"Stra\u00DFe + Hausnummer\",\n            postcode: \"Postleizahl\",\n        };\n\n        if (userslowlaneData.anoniem) {\n            delete keyMappings.voornaam;\n            delete keyMappings.achternaam;\n            delete keyMappings.email;\n        }\n\n        const filteredAndRenamedData = Object.keys(userslowlaneData)\n            .filter(key => Object.keys(keyMappings).includes(key))\n            .reduce((obj, key) => {\n                const newKey = keyMappings[key] || key; \n\n                if (key === \"userType\" && userTypeTranslations[userslowlaneData[key]]) {\n                    obj[newKey] = userTypeTranslations[userslowlaneData[key]];\n                } else {\n                    obj[newKey] = userslowlaneData[key];\n                }\n\n                return obj;\n            }, {});\n\n        console.log(\"userslowlaneData to be sent:\", filteredAndRenamedData);\n\n        const response = await fetch('https://nzf-stripe.toufik.workers.dev/create-payment', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                amount: amount,\n                currency: 'eur',\n                userslowlaneData: JSON.stringify(filteredAndRenamedData)\n            })\n        });\n\n        const data = await response.json();\n        return data;\n    } catch (err) {\n        var buttonText = document.querySelector('.button-text');\n        if (buttonText instanceof HTMLElement) {\n            buttonText.innerText = \"Zur Zahlung\";\n        }\n\n        var existingFailedMessage = document.querySelector(\".failed-message\");\n        if (existingFailedMessage && existingFailedMessage.parentNode) {\n            existingFailedMessage.parentNode.removeChild(existingFailedMessage);\n        }\n        var failedMessage = document.createElement(\"div\");\n        failedMessage.classList.add(\"failed-message\");\n        failedMessage.textContent = \"Es ist ein Fehler aufgetreten. Wenn das Problem weiterhin besteht, aktualisieren Sie die Seite oder \u00FCberpr\u00FCfen Sie Ihre Verbindung.\";\n        failedMessage.style.color = \"red\";\n        var referenceDiv = document.querySelector(\".impact-tabs-menu.w-tab-menu\");\n        if (referenceDiv && referenceDiv.parentNode) {\n            referenceDiv.parentNode.insertBefore(failedMessage, referenceDiv);\n        } else {\n            console.error(\"Element or parent of .impact-tabs-menu.w-tab-menu not found\");\n        }\n        return null;\n    }\n};\n\ninit();"],
  "mappings": "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",
  "names": []
}
